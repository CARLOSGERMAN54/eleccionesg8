/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import clases.ClsCandidato;
import clases.ClsEleccion;
import clases.ClsInscripcion;
import clases.ClsResultado;
import clases.ClsValidacion;
import controladores.CtlCandidato;
import controladores.CtlEleccion;
import controladores.CtlInscripcion;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class GestionCandidatos extends javax.swing.JFrame {
    protected LinkedList<ClsCandidato> listaCandidatos;
    protected LinkedList<ClsEleccion> listaElecciones;
    protected CtlCandidato ctlCandidato;
    public JFrame menuPrincipal;
    public ClsCandidato candidato;
    public CtlEleccion ctlEleccion;
    public CtlInscripcion ctlInscripcion;
    public ClsValidacion clsValidacion;
    public JFrame ventanaPrincipal;
    /**
     * Creates new form GestionCandidatos
     */
    public GestionCandidatos(JFrame venPrincipal) {
        this.ventanaPrincipal = venPrincipal;
        this.ctlCandidato = new CtlCandidato();
        this.ctlEleccion = new CtlEleccion();
        this.ctlInscripcion = new CtlInscripcion();
        initComponents(); 
        this.menuPrincipal = venPrincipal;
        this.btnNuevo.setVisible(false);
        this.btnActualizar.setVisible(false);
        this.listaCandidatos = new LinkedList<ClsCandidato>();
        this.listaElecciones = new LinkedList<ClsEleccion>();
        this.clsValidacion = new ClsValidacion();
        this.ObtenerCandidatos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPestanias = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nombres = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        identificacion = new javax.swing.JTextField();
        apellidos = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ciudadOrigen = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcion = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        mensajeCampania = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        tipoDocumento = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        correo = new javax.swing.JTextField();
        telefono = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        direccion = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        partidoPolitico = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCandidatos = new javax.swing.JTable();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        numeroDocumento = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        validar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaElecciones = new javax.swing.JTable();
        btnInscribir = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        documento = new javax.swing.JLabel();
        nombreCompleto = new javax.swing.JLabel();
        contacto = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPestanias.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                panelPestaniasStateChanged(evt);
            }
        });

        jLabel2.setText("REGISTRO CANDIDATO");

        jLabel3.setText("* CÉDULA");

        nombres.setName("nombres"); // NOI18N
        nombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombresActionPerformed(evt);
            }
        });

        jLabel4.setText("NOMBRE");

        jLabel5.setText("* APELLIDO");

        identificacion.setName("identificacion"); // NOI18N
        identificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identificacionActionPerformed(evt);
            }
        });

        apellidos.setName("cedula"); // NOI18N
        apellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidosActionPerformed(evt);
            }
        });

        jLabel6.setText("* PARTIDO POLITICO");

        jLabel7.setText("CIUDAD ORIGEN");

        ciudadOrigen.setName("cedula"); // NOI18N
        ciudadOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciudadOrigenActionPerformed(evt);
            }
        });

        jLabel8.setText("DESCRIPCIÓN");

        descripcion.setColumns(20);
        descripcion.setRows(5);
        jScrollPane1.setViewportView(descripcion);

        jLabel9.setText("* MENSAJE CAMPAÑA");

        mensajeCampania.setName("cedula"); // NOI18N
        mensajeCampania.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mensajeCampaniaActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        tipoDocumento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "CC", "Pasaporte", "Tarjeta Identidad" }));

        jLabel10.setText("* TIPO DOCUMENTO");

        jLabel11.setText("* CORREO");

        correo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                correoActionPerformed(evt);
            }
        });

        jLabel12.setText("* TELEFONO");

        jLabel13.setText("DIRECCION");

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        partidoPolitico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "LIBERAL", "CONSERVADOR", "MIRA", "CENTRO DEMOCRATICO", "CAMBIO RADICAL", "PARTIDO DE LA U", "POLO DEMOCRATICO" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(telefono, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(partidoPolitico, javax.swing.GroupLayout.Alignment.LEADING, 0, 268, Short.MAX_VALUE)
                            .addComponent(nombres, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tipoDocumento, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(direccion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(apellidos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ciudadOrigen, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mensajeCampania, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9)
                                    .addComponent(identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(correo, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNuevo)
                                .addGap(34, 34, 34)
                                .addComponent(btnActualizar))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 150, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(partidoPolitico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(ciudadOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(correo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mensajeCampania)
                    .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnNuevo)
                    .addComponent(btnActualizar))
                .addGap(51, 51, 51))
        );

        panelPestanias.addTab("REGISTRO", jPanel1);

        tablaCandidatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Identificación", "Nombre", "Partido", "Mensaje"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaCandidatos);

        btnEliminar.setText("Eliminar");
        btnEliminar.setName("btnEliminar"); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setName("btnEditar"); // NOI18N
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnEditar))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        panelPestanias.addTab("REPORTE CANDIDATOS", jPanel2);

        jLabel14.setText("Identificación");

        jLabel15.setText("Seleccionar Elección");

        validar.setText("Validar");
        validar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarActionPerformed(evt);
            }
        });

        tablaElecciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Categoria", "Fecha Inicio", "Fecha Fin"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaElecciones);

        btnInscribir.setText("Inscribir");
        btnInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscribirActionPerformed(evt);
            }
        });

        documento.setText("Idenficación:");

        nombreCompleto.setText("Nombre:");

        contacto.setText("Contacto:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(documento)
                    .addComponent(nombreCompleto)
                    .addComponent(contacto))
                .addContainerGap(690, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(documento)
                .addGap(18, 18, 18)
                .addComponent(nombreCompleto)
                .addGap(18, 18, 18)
                .addComponent(contacto)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jLabel16.setText("INSCRIPCION DE CANDIDATOS");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(394, 394, 394)
                .addComponent(jLabel16)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(32, 32, 32)
                .addComponent(numeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validar)
                .addGap(226, 226, 226))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 789, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(407, 407, 407)
                        .addComponent(btnInscribir)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validar)
                    .addComponent(jLabel14))
                .addGap(30, 30, 30)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInscribir)
                .addGap(25, 25, 25))
        );

        panelPestanias.addTab("INSCRIPCIÓN", jPanel3);

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        jLabel17.setText("GESTION CANDIDATOS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPestanias, javax.swing.GroupLayout.PREFERRED_SIZE, 901, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVolver)
                .addGap(378, 378, 378))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVolver)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addComponent(panelPestanias, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.menuPrincipal.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void panelPestaniasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_panelPestaniasStateChanged
        // TODO add your handling code here:
        ObtenerCandidatos();
        this.btnEditar.setVisible(true);
    }//GEN-LAST:event_panelPestaniasStateChanged

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        this.panelPestanias.setSelectedIndex(1);
        int columna = 0;
        int fila = this.tablaCandidatos.getSelectedRow();
        String id = this.tablaCandidatos.getValueAt(fila, columna).toString();
        ClsCandidato candidato = this.buscarCandidato(id);
        //System.out.println(candidato.identificacion);
        if (candidato != null) {
            this.identificacion.setEnabled(false);
            this.btnAgregar.setVisible(false);
            this.btnEditar.setVisible(true);
            this.btnNuevo.setVisible(true);
            this.identificacion.setText(candidato.getIdentificacion());
            this.tipoDocumento.setSelectedItem(candidato.getTipoIdentificacion());
            this.nombres.setText(candidato.getNombres());
            this.apellidos.setText(candidato.getApellidos());
            this.partidoPolitico.setSelectedItem(candidato.getPartidoPolitico());
            this.ciudadOrigen.setText(candidato.getCiudadOrigen());
            this.telefono.setText(candidato.getTelefono());
            this.correo.setText(candidato.getCorreo());
            this.direccion.setText(candidato.getDireccion());
            this.mensajeCampania.setText(candidato.getMensajeCampania());
            this.descripcion.setText(candidato.getDescripcion());
        }
        this.panelPestanias.setSelectedIndex(0);
        this.btnActualizar.setVisible(true);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int columna = 0;
        int fila = this.tablaCandidatos.getSelectedRow();
        String id = this.tablaCandidatos.getValueAt(fila, columna).toString();

        ClsResultado mensaje = this.ctlCandidato.eliminarCandidato(id);

        if (mensaje.getTipo().equals(ClsResultado.OK)) {
            ObtenerCandidatos();
        }
        mensaje.mostrarMensaje();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        String identificacion = this.identificacion.getText();
        String tipoIdentificacion  = this.tipoDocumento.getSelectedItem().toString();
        String nombres = this.nombres.getText();
        String apellidos = this.apellidos.getText();
        String partidoPolitico = this.partidoPolitico.getSelectedItem().toString();
        String ciudadOrigen = this.ciudadOrigen.getText();
        String telefono = this.telefono.getText();
        String correo = this.correo.getText();
        String direccion = this.direccion.getText();
        String mensajeCampania = this.mensajeCampania.getText();
        String descripcion = this.descripcion.getText();
        if(tipoIdentificacion == "CC")
        {
                if(clsValidacion.validarCadenaNumerica(identificacion)){
                    if(clsValidacion.validarCadenaNumerica(telefono)){
                        if(partidoPolitico != "SELECCIONAR")
                         {
                             if(clsValidacion.validarNombresPersonas(nombres) && clsValidacion.validarNombresPersonas(apellidos)){
                                 if(!mensajeCampania.isBlank()){
                                     if(clsValidacion.validarCorreo(correo)){
                                         ClsCandidato  can = new ClsCandidato(ciudadOrigen, descripcion, mensajeCampania,
                                         partidoPolitico, 1, identificacion, tipoIdentificacion, nombres,
                                         apellidos, correo, telefono, direccion);
                                         ClsResultado mensaje = this.ctlCandidato.actualizarCandidato(can);

                                         if (mensaje.getTipo().equals(ClsResultado.OK)) {
                                             ObtenerCandidatos();
                                         }
                                         JOptionPane.showMessageDialog(null, mensaje.getTexto());
                                     }
                                     else
                                     {
                                         JOptionPane.showMessageDialog(null, "Correo inválido");
                                     }
                                 }
                                 else
                                 {
                                     JOptionPane.showMessageDialog(null, "El mensaje de campaña es obligatorio");
                                 }
                             }
                             else
                             {
                                 JOptionPane.showMessageDialog(null, "El nombre y apellido solo debe contener caracteres alfabéticos");
                             }
                         }
                         else
                         {
                             JOptionPane.showMessageDialog(null, "Es obligatorio seleccionar partido político");
                         }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "El número de teléfono es inválido "); 
                    }
            }
           else
            {
               JOptionPane.showMessageDialog(null, "El número de identificaión es inválido "); 
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "El Tipo de documento debe ser cédula");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        this.btnAgregar.setVisible(true);
        this.btnEditar.setVisible(false);
        this.btnNuevo.setVisible(false);
        this.btnActualizar.setVisible(false);
        this.identificacion.setEnabled(true);
        this.limpiarFormulario();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void correoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_correoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_correoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        String ciudadOrigen = this.ciudadOrigen.getText();
        String descripcion = this.descripcion.getText();
        String mensajeCampania = this.mensajeCampania.getText();
        String partidoPolitico = (String)this.partidoPolitico.getSelectedItem();
        String identificacion = this.identificacion.getText();
        String tipoIdentificacion = (String)this.tipoDocumento.getSelectedItem();
        String nombres = this.nombres.getText();
        String apellidos = this.apellidos.getText();
        String correo = this.correo.getText();
        String telefono = this.telefono.getText();
        String direccion = this.direccion.getText();
        if(tipoIdentificacion == "CC")
        {
                if(clsValidacion.validarCadenaNumerica(identificacion)){
                    if(clsValidacion.validarCadenaNumerica(telefono)){
                        if(partidoPolitico != "SELECCIONAR")
                         {
                             if(clsValidacion.validarNombresPersonas(nombres) && clsValidacion.validarNombresPersonas(apellidos)){
                                 if(!mensajeCampania.isBlank()){
                                     if(clsValidacion.validarCorreo(correo)){
                                         ClsCandidato candidato = new ClsCandidato(ciudadOrigen, descripcion,
                                         mensajeCampania, partidoPolitico,1, identificacion, tipoIdentificacion, nombres, apellidos, correo, telefono,direccion);
                                         CtlCandidato cCandidato = new CtlCandidato();
                                         ClsResultado res = cCandidato.adicionarCandidato(candidato);
                                         res.mostrarMensaje();
                                         if(res.getTipo() == ClsResultado.OK)
                                         {
                                             this.limpiarFormulario();
                                         }
                                     }
                                     else
                                     {
                                         JOptionPane.showMessageDialog(null, "Correo inválido");
                                     }
                                 }
                                 else
                                 {
                                     JOptionPane.showMessageDialog(null, "El mensaje de campaña es obligatorio");
                                 }
                             }
                             else
                             {
                                 JOptionPane.showMessageDialog(null, "El nombre y apellido solo debe contener caracteres alfabéticos");
                             }
                         }
                         else
                         {
                             JOptionPane.showMessageDialog(null, "Es obligatorio seleccionar partido político");
                         }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "El número de teléfono es inválido"); 
                    }
            }
           else
            {
               JOptionPane.showMessageDialog(null, "El número de identificación es inválido"); 
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "El Tipo de documento debe ser cédula");
        }
        

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void mensajeCampaniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mensajeCampaniaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mensajeCampaniaActionPerformed

    private void ciudadOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciudadOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ciudadOrigenActionPerformed

    private void apellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidosActionPerformed

    private void identificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_identificacionActionPerformed

    private void nombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombresActionPerformed

    private void validarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarActionPerformed
        // TODO add your handling code here:
        String cedula = this.numeroDocumento.getText();
        this.candidato = ctlCandidato.buscarCandidato(cedula);
        this.tablaElecciones.setDefaultEditor(Object.class, null);        
        if(candidato!=null)
        {
            this.documento.setText("Identificación: "+this.candidato.identificacion+" ");
            this.nombreCompleto.setText("Nombre: "+this.candidato.nombres+" "+""+this.candidato.apellidos+" ");
            this.contacto.setText("Contacto: "+ " Teléfono("+this.candidato.telefono+") Correo("+this.candidato.correo+") ");
            this.ObtenerElecciones();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Candidato no registrado");
            this.documento.setText("");
            this.nombreCompleto.setText(" ");
            this.contacto.setText(" ");
            if(this.tablaElecciones!=null)
            {
                this.limpiarTablas(this.tablaElecciones);
            }
            
        }
    }//GEN-LAST:event_validarActionPerformed

    private void btnInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscribirActionPerformed
        // TODO add your handling code here:
        if(this.tablaElecciones.getRowCount()>0){
            if(this.tablaElecciones.getSelectedRow()>=0){
                int columna = 0;
                int fila = this.tablaElecciones.getSelectedRow();
                int idInscripcion = 0;
                String id = this.tablaElecciones.getValueAt(fila, columna).toString();
                int idEleccion = Integer.parseInt(id);
                if(this.ctlInscripcion.buscarInscrito(this.candidato.getIdentificacion(),Integer.parseInt(id))==null){

                    String idCandidato = this.candidato.getIdentificacion();
                    Date fechaInscripcion = this.clsValidacion.LocaldateTimeAdate(LocalDateTime.now());
                    int estado = 1;
                    ClsInscripcion ins = new ClsInscripcion(idInscripcion, idEleccion, idCandidato, fechaInscripcion, estado);
                    ClsResultado res = this.ctlInscripcion.adicionarCandidato(ins);
                    res.mostrarMensaje();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "El candidato ya se encuentra inscrito");
                }
            }
            else
            {
               JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna elección"); 
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "No se han cargado elecciones");
        }
    }//GEN-LAST:event_btnInscribirActionPerformed

    public void limpiarFormulario(){
        this.identificacion.setText("");
        this.ciudadOrigen.setText("");
        this.descripcion.setText("");
        this.mensajeCampania.setText("");
        this.partidoPolitico.setSelectedIndex(0);
        this.identificacion.getText();
        this.tipoDocumento.setSelectedIndex(0);
        this.nombres.setText("");
        this.apellidos.setText("");
        this.correo.setText("");
        this.telefono.setText("");
    }
    
    public void ObtenerCandidatos() {

        this.listaCandidatos = this.ctlCandidato.ObtenerCandidatos();
        this.actualizarTablaCandidatos(listaCandidatos);
    }
    
        public void ObtenerElecciones() {

        this.listaElecciones = this.ctlEleccion.ObtenerElecciones();
        this.actualizarTablaElecciones(this.listaElecciones);
    }

    private void actualizarTablaCandidatos(LinkedList<ClsCandidato> candidatos) {
        if(candidatos !=null){
            DefaultTableModel modelo = (DefaultTableModel) this.tablaCandidatos.getModel();
            modelo.setRowCount(0);
            for (ClsCandidato c : candidatos) {

                Object[] fila = {c.identificacion, c.nombres +" "+ c.apellidos, c.getPartidoPolitico(),
                    c.getMensajeCampania()};

                modelo.addRow(fila);

            }
        }
    }
    public void limpiarTablas(JTable jTable)
    {
        DefaultTableModel modelo = (DefaultTableModel) jTable.getModel();
        modelo.setRowCount(0);
    }
    
    private void actualizarTablaElecciones(LinkedList<ClsEleccion> elecciones) {
            if(elecciones!=null){
                DefaultTableModel modelo = (DefaultTableModel) this.tablaElecciones.getModel();
                modelo.setRowCount(0);

                for (ClsEleccion c : elecciones) {

                    Object[] fila = {c.idEleccion, c.nombre,c.categoria, c.fechaInicio,
                        c.getFechaFin()};

                    modelo.addRow(fila);

                }
            }
    }
        public ClsCandidato buscarCandidato(String idCandidato) {
        for (ClsCandidato c : this.listaCandidatos) {
            if (idCandidato.equals(c.getIdentificacion())) {
                return c;
            }
        }

        return null;

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionCandidatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionCandidatos(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidos;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInscribir;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnVolver;
    private javax.swing.JTextField ciudadOrigen;
    private javax.swing.JLabel contacto;
    private javax.swing.JTextField correo;
    private javax.swing.JTextArea descripcion;
    private javax.swing.JTextField direccion;
    private javax.swing.JLabel documento;
    private javax.swing.JTextField identificacion;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField mensajeCampania;
    private javax.swing.JLabel nombreCompleto;
    private javax.swing.JTextField nombres;
    private javax.swing.JTextField numeroDocumento;
    private javax.swing.JTabbedPane panelPestanias;
    private javax.swing.JComboBox<String> partidoPolitico;
    private javax.swing.JTable tablaCandidatos;
    private javax.swing.JTable tablaElecciones;
    private javax.swing.JTextField telefono;
    private javax.swing.JComboBox<String> tipoDocumento;
    private javax.swing.JButton validar;
    // End of variables declaration//GEN-END:variables
}
